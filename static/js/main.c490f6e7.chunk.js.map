{"version":3,"sources":["components/Weather.js","components/Loader.js","components/CurrLocWeather.js","components/SavedLoc.js","components/OtherLocWeather.js","components/SearchedCity.js","components/Modal.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Condition","Temp","p","City","P","Weather","props","blob","temperature","city","country","loader","status","description","icon","error","weather_icon","Fragment","src","alt","toFixed","style","color","Pulse","keyframes","Svg","svg","Loader","viewBox","cx","cy","r","fill","CurrLoc","CurrIcon","CurrLocWeather","state","isLoaded","undefined","abortController","AbortController","controllerSignal","signal","weatherInit","navigator","geolocation","setState","getCurrentPosition","position","getWeatherData","coords","latitude","longitude","alert","lat","lon","weatherApi","process","fetch","then","response","json","result","name","sys","main","temp","humidity","weather","charAt","toUpperCase","slice","cod","message","this","abort","marginRight","faMapMarkerAlt","Component","Other","AddError","OtherLocWeather","faMapMarkedAlt","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","err","console","storedId","setStoredValue","value","valueToStore","Function","setItem","stringify","SearchedCity","setId","onClick","ids","cityId","children","Form","form","Input","input","Btn","button","ModalWrapper","show","Country","h3","CityList","Modal","setCity","cityData","setCityData","loading","setLoading","setError","resetInput","getWeather","e","preventDefault","res","catch","log","type","onSubmit","onChange","target","placeholder","length","map","close","id","faMapPin","Overlay","Add","Button","App","open","handleOpen","handleClose","fontSize","faPlus","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c490f6e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// Styles\r\n//-------------------------------------------------------------------------------------------------------\r\n\r\nconst Container = styled.div`\r\n    background-color: white;\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    cursor: pointer;\r\n    padding: 2rem;\r\n    transition: all 0.2s ease;\r\n    border-radius: 5px;\r\n    box-shadow: 0 .1rem 1rem 5px rgba(0,0,0,0.07);\r\n    &:hover{\r\n        box-shadow: 0 .1rem 1rem 5px rgba(0,0,0,0.16);\r\n        transform: translateY(-3px);\r\n    }\r\n`;\r\n\r\nconst Condition = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin: 1.7rem 0;\r\n    justify-content: space-evenly;\r\n`;\r\n\r\nconst Temp = styled.p`\r\n    font-size: 3.5rem;\r\n    color: #2b7a78;\r\n`;\r\n\r\nconst City = styled.p`\r\n    font-size: 1.3rem;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nconst P = styled.p`\r\n    color: red;\r\n    padding: 1rem 0;\r\n    font-family: 'Varela Round', sans-serif;\r\n    font-size: 1rem\r\n`;\r\n\r\n//-------------------------------------------------------------------------------------------------------\r\n\r\nfunction Weather(props) {\r\n    const { temperature, city, country, loader, status, description, icon, error} = props.blob;\r\n    const weather_icon = `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n\r\n    const renderContent = () => {\r\n        if(status === 'fetching'){\r\n            return loader;\r\n        }\r\n        else if(status === 'fetched'){\r\n            return (\r\n                <React.Fragment>\r\n                    { city && country && <City>{city}, {country}</City> }\r\n                    <Condition>\r\n                        { icon && <img src={weather_icon} alt=\"weather-icon\" />}\r\n                        { temperature && <Temp>{temperature.toFixed()}Â°C</Temp> }\r\n                    </Condition>\r\n                    { description && <p style={{color: '#2b7a78'}}>{description}</p> }\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        else if(status === 'unable'){\r\n            return <P>{error}</P>\r\n        }\r\n        else{\r\n            return <P>{error}</P>\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container>\r\n                {renderContent()}\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Weather;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst Pulse = keyframes`\r\n    from{ transform: scale(1); }\r\n    to{ transform: scale(0.5); }\r\n`;\r\n\r\nconst Svg = styled.svg`\r\n    width: 40px;\r\n    animation: ${Pulse} .2s ease-in-out infinite alternate;\r\n`;\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Svg viewBox=\"0 0 100 100\">\r\n            <circle cx=\"50%\" cy=\"50%\" r=\"50%\" fill=\"#71d1cf\" />\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Weather from './Weather';\r\nimport Loader from './Loader';\r\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst CurrLoc = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1.5rem;\r\n    padding: 2rem;\r\n`;\r\n\r\nconst CurrIcon = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 3rem;\r\n`;\r\n\r\nconst P = styled.p`\r\n    font-size: 1.1rem;\r\n    font-family: 'Varela Round', sans-serif;\r\n    font-weight: bold;\r\n    color: #4d4d4d;\r\n`;\r\n\r\nclass CurrLocWeather extends Component{\r\n    state = {\r\n        status: 'init',\r\n        isLoaded: false,\r\n        loader: undefined,\r\n        temperature: undefined,\r\n        city: undefined,\r\n        country: undefined,\r\n        description: undefined,\r\n        icon: undefined,\r\n        error: undefined\r\n    }\r\n\r\n    abortController = new AbortController();\r\n    controllerSignal = this.abortController.signal;\r\n\r\n    weatherInit = () => {\r\n        const success = (position) => {\r\n            this.setState({status: 'fetching'})\r\n            this.getWeatherData(position.coords.latitude, position.coords.longitude);\r\n        }\r\n\r\n        const error = () => {\r\n            this.setState({status: 'unable', error: 'Please enable location access'});\r\n        }\r\n\r\n        if(navigator.geolocation){\r\n            this.setState({status: 'fetching', loader: <Loader />});\r\n            navigator.geolocation.getCurrentPosition(success, error);\r\n        }\r\n        else{\r\n            this.setState({status: 'unsupported'});\r\n            alert('Your browser does not support location tracking, or permission is denied');\r\n        }\r\n    }\r\n\r\n    getWeatherData = (lat, lon) => {\r\n        const weatherApi = `${process.env.REACT_APP_BASEURL}?appid=${process.env.REACT_APP_API_KEY}&lat=${lat}&lon=${lon}&units=metric`;\r\n        fetch(weatherApi, { signal: this.controllerSignal })\r\n        .then(response => response.json())\r\n        .then((result) => {\r\n            const { name } = result;\r\n            const { country } = result.sys;\r\n            const { temp, humidity } = result.main;\r\n            let { description, icon } = result.weather[0];\r\n            description = description.charAt(0).toUpperCase() + description.slice(1);\r\n            this.setState({\r\n                isLoaded: true,\r\n                temperature: temp,\r\n                status: 'fetched',\r\n                city: name,\r\n                country: country,\r\n                humidity,\r\n                description,\r\n                icon,\r\n                error: (result.cod === '404')? result.message: null\r\n            })\r\n        },(error) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                error\r\n            });\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.weatherInit();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.abortController.abort();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <CurrLoc>\r\n                <CurrIcon>\r\n                    <FontAwesomeIcon style={{marginRight: '.6rem',color: '#2b7a78'}} icon={faMapMarkerAlt} ></FontAwesomeIcon>\r\n                    <P>Current Location</P>\r\n                </CurrIcon>\r\n                <Weather blob={this.state} />\r\n            </CurrLoc>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurrLocWeather;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    background-color: white;\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    cursor: pointer;\r\n    padding: 2rem 0;\r\n    margin-top: 2rem;\r\n    transition: all 0.2s ease;\r\n    border-radius: 5px;\r\n    box-shadow: 0 .1rem 1rem 5px rgba(0,0,0,0.07);\r\n    &:hover{\r\n        box-shadow: 0 .1rem 1rem 5px rgba(0,0,0,0.16);\r\n        transform: translateY(-3px);\r\n    }\r\n`;\r\n\r\nexport default function SavedLoc() {\r\n    return (\r\n        <Container>\r\n            \r\n        </Container>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { faMapMarkedAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SavedLoc from './SavedLoc';\r\n\r\n// Styles\r\n//----------------------------------------------------------------------------------//\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst Other = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nconst P = styled.p`\r\n    font-size: 1.1rem;\r\n    font-family: 'Varela Round', sans-serif;\r\n    font-weight: bold;\r\n    color: #4d4d4d;\r\n`;\r\n\r\nconst AddError = styled(P)`\r\n    color: red;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    margin-top: 1.5rem;\r\n`;\r\n\r\nconst SavedCity = styled.div`\r\n    width: 100%;\r\n    padding: 0 1rem 1rem 1rem;\r\n    overflow-x: scroll;\r\n    scroll-behavior: smooth;\r\n    &::-webkit-scrollbar {\r\n        width: 0em;\r\n    }\r\n`;\r\n\r\n//----------------------------------------------------------------------------------//\r\n\r\nconst OtherLocWeather = () => {\r\n    \r\n\r\n    return (\r\n        <Container>\r\n            <Other>\r\n                <FontAwesomeIcon style={{marginRight: '.6rem',color: '#2b7a78'}} icon={faMapMarkedAlt}></FontAwesomeIcon>\r\n                <P>Other Locations</P>\r\n            </Other>\r\n            <AddError>You don't have any saved location. Click below to add.</AddError>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OtherLocWeather;\r\n","import React, {useEffect, useState} from  'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    background-color: white;\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    cursor: pointer;\r\n    padding: 2rem;\r\n    margin-top: 2rem;\r\n    transition: all 0.2s ease;\r\n    border-radius: 5px;\r\n    box-shadow: 0 .1rem 1rem 5px rgba(0,0,0,0.07);\r\n    &:hover{\r\n        box-shadow: 0 .1rem 1rem 5px rgba(0,0,0,0.16);\r\n        transform: translateY(-3px);\r\n    }\r\n`;\r\nconst SearchedCity = (props) => {\r\n    const [storedId, setId] = useLocalStorage('ids', []);\r\n\r\n    let handleId = () => {\r\n        let ids = JSON.parse(localStorage.getItem('ids')) || [];\r\n        setId([...ids, props.cityId]);\r\n    }\r\n\r\n    return (\r\n        <Container onClick={handleId}>\r\n            {props.children}\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n    const [storedId, setStoredValue] = useState(() => {\r\n      try {\r\n        const item = window.localStorage.getItem(key);\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (err) {\r\n        console.error(err);\r\n        return initialValue;\r\n      }\r\n    });\r\n  \r\n    const setValue = value => {\r\n      try {\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedId) : value;\r\n        setStoredValue(valueToStore);\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n  \r\n    return [storedId, setValue];\r\n};\r\n\r\nexport default SearchedCity;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchedCity from './SearchedCity';\r\nimport Loader from './Loader';\r\nimport { faMapPin } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// Styles\r\n//--------------------------------------------------------------------------//\r\n\r\nconst Form = styled.form`\r\n    padding: 3rem 2rem;\r\n    background-color: #bfdfe0;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n    flex-direction: row;\r\n    font-family: 'Varela Round', sans-serif;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    border: none;\r\n    outline: none;\r\n    padding: 12px 9px;\r\n    width: 100%;\r\n    background-color: #fff;\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n    outline: none;\r\n    padding: .5em 1.5em;\r\n    border-radius: 5px;\r\n    margin-left: 1rem;\r\n    cursor: pointer;\r\n    border: 2px solid #2b7a78;\r\n    background-color: #bfdfe0;\r\n    color: #2b7a78;\r\n    font-family: 'Varela Round', sans-serif;\r\n    font-size: 1.2rem;\r\n    transition: all 0.1s ease-in;\r\n    &:hover{\r\n        background-color: #2b7a78;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n    position: absolute;\r\n    align-self: center;\r\n    display: flex;\r\n    width: 30%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    transform: ${props => props.show ? 'translateY(10vh)' : 'translateY(-20vh)'}; \r\n    opacity: ${props => props.show ? '1' : '0'};\r\n    transition: all .5s cubic-bezier(0.24, 1.01, 0.98, 1.04);\r\n`;\r\n\r\nconst Country = styled.h3`\r\n    color: #0e0e0e;\r\n`;\r\n\r\nconst City = styled.p`\r\n    color: #2b7a78;\r\n    font-size: 1.3rem;\r\n    margin-top: .5rem;\r\n`;\r\n\r\nconst CityList = styled.div`\r\n    width: 100%;\r\n    margin-top: 1rem;\r\n    display: flex;\r\n    padding: 0 2rem;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    overflow-y: scroll;\r\n    scroll-behaviour: smooth;\r\n    height: 38vh;\r\n    &::-webkit-scrollbar {\r\n        width: 0em;\r\n    }\r\n`;\r\n\r\n//--------------------------------------------------------------------------//\r\n\r\nconst Modal = (props) => {\r\n    const [city, setCity] = useState('');\r\n    const [cityData, setCityData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState({});\r\n\r\n    const handleInputChange = (e) => {\r\n        setCityData(() => []);\r\n        setCity(e.target.value);\r\n    }\r\n\r\n    let resetInput = () => {\r\n        return setCity('');\r\n    }\r\n\r\n    let getWeather = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        fetch(`https://fierce-castle-13645.herokuapp.com/weather?city=${city}`)\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                resetInput();\r\n                if(response.message){\r\n                    setError(response);\r\n                    resetInput();\r\n                }\r\n                else{\r\n                    setError('');\r\n                    setCityData(response);\r\n                }\r\n                setLoading(false);\r\n            })\r\n            .catch(err => console.log(error));\r\n    }\r\n\r\n    let renderCity = () => {\r\n        if(loading && city !== ''){\r\n            return (<SearchedCity><Loader /></SearchedCity>)\r\n        }\r\n        else{\r\n            if(cityData.length > 0 && !error.message){\r\n                return (\r\n                    <CityList>\r\n                        {cityData.map(city => {\r\n                            return (\r\n                                <SearchedCity close={props.close} cityId={city.id} key={city.id}>\r\n                                    <Country><FontAwesomeIcon icon={faMapPin} style={{marginRight: '10px'}}></FontAwesomeIcon>{city.country}</Country>\r\n                                    <City>{city.name}</City>\r\n                                </SearchedCity>\r\n                            )\r\n                        })}\r\n                    </CityList>\r\n                )\r\n            }\r\n            else if(error.message){\r\n                return (\r\n                    <SearchedCity><City style={{color: 'red'}}>{error.message}</City></SearchedCity>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ModalWrapper show={props.show}>\r\n            <Form type=\"submit\" onSubmit={getWeather}>\r\n                <Input type=\"text\" value={city} onChange={handleInputChange} placeholder=\"Enter city name...\" />\r\n                <Btn type=\"submit\" onClick={getWeather}>Search</Btn>\r\n            </Form>\r\n            {renderCity()}\r\n        </ModalWrapper>\r\n    )\r\n\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CurrLocWeather from './components/CurrLocWeather';\nimport OtherLocWeather from './components/OtherLocWeather';\nimport Modal from './components/Modal';\n\nconst Overlay = styled.div`\n    position: absolute;\n    background-color: rgb(85, 99, 99);\n    opacity: 0.7;\n    transition: all 1s ease-in;\n    height: 100%;\n    width: 100%;\n    align-self: center;\n`;\n\nconst Add = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    margin-top: 8%;\n    justify-content: center;\n`;\n\nconst Button = styled.button`\n    border: none;\n    padding: 7px 10px;\n    border-radius: 50%;\n    background-color: #2b7a78;\n    outline: none;\n    cursor: pointer;\n`;\n\nclass App extends Component {\n    state={\n      open: false\n    }\n\n    handleOpen = () => {\n      this.setState({open: true})\n    }\n\n    handleClose = () => {\n      this.setState({open: false})\n    }\n\n    render() {\n      return (\n        <React.Fragment>\n          <CurrLocWeather />\n          <OtherLocWeather />\n          <Add>\n              <Button onClick={this.handleOpen}><FontAwesomeIcon style={{fontSize: '1.7rem', color: 'white'}} icon={faPlus}></FontAwesomeIcon></Button>\n          </Add>\n          { this.state.open ? <Overlay onClick={this.handleClose} /> : null}\n          <Modal show={this.state.open} close={this.handleClose} />\n        </React.Fragment>\n      )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}